services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./docker/mongo:/data/db
    command: --replSet rs0 --oplogSize 128

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  postgres-source:
    image: postgres:11
    container_name: postgres-source
    ports:
      - 5433:5432
    volumes:
      - ./docker/postgres-source:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"

  mysql:
    image: mysql:8.3
    container_name: mysql
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mysql
      - MYSQL_DATABASE=test
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 29092:29092

  # apicurio:
  #   image: apicurio/apicurio-registry-mem:2.6.2.Final
  #   ports:
  #     - 8080:8080

  debezium:
    image: debezium/connect:2.3
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: my_status_topic
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: true
      VALUE_CONVERTER_SCHEMAS_ENABLE: true
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: true
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: true
      # ENABLE_APICURIO_CONVERTERS: true
      # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      # CONNECT_KEY_CONVERTER_APICURIO_REGISTRY_URL: http://apicurio:8080/apis/registry/v2
      # CONNECT_KEY_CONVERTER_APICURIO_REGISTRY_AUTO-REGISTER: true
      # CONNECT_KEY_CONVERTER_APICURIO_REGISTRY_FIND-LATEST: true
      # CONNECT_VALUE_CONVERTER: io.apicurio.registry.utils.converter.AvroConverter
      # CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_URL: http://apicurio:8080/apis/registry/v2
      # CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_AUTO-REGISTER: true
      # CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_FIND-LATEST: true
      # CONNECT_SCHEMA_NAME_ADJUSTMENT_MODE: avro
      # CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
    depends_on: [kafka]
    ports:
      - 8083:8083

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:5.5.3
  #   environment:
  #     - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
  #     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
  #     - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8085,http://localhost:8085
  #   ports:
  #     - 8085:8085
  #   depends_on: [zookeeper, kafka]

  backend-mongo:
    image: mongo
    container_name: backend-mongo
    ports:
      - 27018:27017
    volumes:
      - ./docker/backend-mongo:/data/db
    command: --replSet rs0 --oplogSize 128

  backend:
    build:
      context: .
    ports:
      - 8000:8000
    depends_on:
      - backend-mongo
    container_name: backend
    env_file: backend/.env
    environment:
      - MONGO_URL=mongodb://backend-mongo:27017?replicaSet=rs0
      - MONGO_DB_NAME=database_transfering
      - KAFKA_CONNECT=http://debezium:8083
      - KAFKA_SERVER=kafka:9092
    command: ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - .:/app

